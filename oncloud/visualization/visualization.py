import numpy as np
import matplotlib.pyplot as plt
import yaml

def get_ours(ourinfos, res=True):
    ouraccs, ourlats = [], []
    for infoid in range(len(ourinfos)):
        info = ourinfos[infoid]
        # acc_lat = [info[-2], info[-1]]
        # if info[-2] > 
        # if infoid == 0 and res:
        #     ouraccs.append(info[-1])
        #     ourlats.append(info[-2])
        #     continue            
        ouraccs.append(info[-2])
        ourlats.append(info[-1])

    return ouraccs, ourlats
# # Custom constructor for 'tag:yaml.org,2002:python/tuple'
# def construct_tuple(loader, node):
#     return tuple(loader.construct_sequence(node))

# # Add the custom constructor to the YAML loader
# yaml.add_constructor('tag:yaml.org,2002:python/tuple', construct_tuple)


with open('searched/jetson_mbv2_info.yaml', 'r') as f:
    jetson_mbv2_info = yaml.load(f, Loader=yaml.Loader)
    # print(jetson_mbv2_info)

with open('searched/jetson_res50_info.yaml', 'r') as f:
    jetson_res50_info = yaml.load(f, Loader=yaml.Loader)

with open('searched/jetson_res101_info.yaml', 'r') as f:
    jetson_res101_info = yaml.load(f, Loader=yaml.Loader)


with open('searched/xiaomi_mbv2_info.yaml', 'r') as f:
    xiaomi_mbv2_info = yaml.load(f, Loader=yaml.Loader)

with open('searched/xiaomi_res50_info.yaml', 'r') as f:
    xiaomi_res50_info = yaml.load(f, Loader=yaml.Loader)

with open('searched/xiaomi_res101_info.yaml', 'r') as f:
    xiaomi_res101_info = yaml.load(f, Loader=yaml.Loader)


with open('searched/nvidia_3090_mbv2_info.yaml', 'r') as f:
    nvidia_3090_mbv2_info = yaml.load(f, Loader=yaml.Loader)

with open('searched/nvidia_3090_res50_info.yaml', 'r') as f:
    nvidia_3090_res50_info = yaml.load(f, Loader=yaml.Loader)

with open('searched/nvidia_3090_res101_info.yaml', 'r') as f:
    nvidia_3090_res101_info = yaml.load(f, Loader=yaml.Loader)

fig, ax = plt.subplots(3, 3, figsize=(20, 16))
plt.rcParams.update({"font.size":20})
# x=plt.title("validation_acc",fontsize=20)
ratios = []
'''Jetson Nano'''
#mbv2 bs = 1
ouraccs, ourlats = get_ours(jetson_mbv2_info, False)#[(72.40000012207031, 0.0414144604427175), [(71.7000001220703, [0, -2, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 0.0379153385496976, 71.7000001220703), 71.34042553191489, 0.0379153385496976], [(71.10000012207031, [0, -2, -2, 0, 0, 0, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0], 0.036571331191481204, 71.10000012207031), 71.08936170212766, 0.036571331191481204], [(70.7, [0, -2, 0, 1, 99, -2, 0, 1, 99, 0, 0, 0, 0, 0, 0, 0, 0], 0.03460247235788139, 70.7), 70.09148936170213, 0.03460247235788139], [(69.26666678873698, [0, -2, 1, 99, 0, 0, 0, -2, -2, 1, 99, 0, 0, 0, 0, 0, 0], 0.03185391963872694, 69.26666678873698), 69.01914893617021, 0.03185391963872694], [(67.86666678873698, [0, 0, 2, 99, 99, 1, 99, 1, 99, 1, 99, 0, 0, 0, 0, 0, 0], 0.030155149617589506, 67.86666678873698), 68.25744680851064, 0.030155149617589506], [(67.40000012207031, [0, -2, -1, 0, 1, 99, 1, 99, 1, 99, 1, 99, 0, 0, -2, 0, 0], 0.02837994582670972, 67.40000012207031), 67.05106383011189, 0.02837994582670972], [(65.53333335367839, [0, -2, 2, 99, 99, 2, 99, 99, -2, 1, 99, -1, 0, -2, 0, 0, 0], 0.026079801090976643, 65.53333335367839), 65.74680851096295, 0.026079801090976643], [(64.26666678873698, [0, -2, 2, 99, 99, -2, 0, 1, 99, 2, 99, 99, -2, 0, 1, 99, 0], 0.0245313118573717, 64.26666678873698), 64.57872340425531, 0.0245313118573717], [(62.76666678873698, [0, -2, 1, 99, 1, 99, 2, 99, 99, -2, 1, 99, 2, 99, 99, -2, 0], 0.0224569548939105, 62.76666678873698), 62.785106382978725, 0.0224569548939105], [(59.033333374023435, [0, -2, 2, 99, 99, 1, 99, 1, 99, 2, 99, 99, 2, 99, 99, 1, 99], 0.020128587134798665, 59.033333374023435), 58.902127660223776, 0.020128587134798665]])  # TODO
for i in range(len(ourlats)):
    ourlats[i] *= 1000.
c1=ax[0, 0].plot(ourlats, ouraccs, marker='o', markersize=4, c='r')
# c4=ax[0, 0].plot([ourlats[0]], [ouraccs[0]], linestyle=':', marker='o', markersize=4, c='black')
ax[0, 0].grid(True, alpha=0.5)

#resnet50 bs=1
ouraccs, ourlats = get_ours(jetson_res50_info)#[(72.40000012207031, 0.0414144604427175), [(71.7000001220703, [0, -2, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 0.0379153385496976, 71.7000001220703), 71.34042553191489, 0.0379153385496976], [(71.10000012207031, [0, -2, -2, 0, 0, 0, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0], 0.036571331191481204, 71.10000012207031), 71.08936170212766, 0.036571331191481204], [(70.7, [0, -2, 0, 1, 99, -2, 0, 1, 99, 0, 0, 0, 0, 0, 0, 0, 0], 0.03460247235788139, 70.7), 70.09148936170213, 0.03460247235788139], [(69.26666678873698, [0, -2, 1, 99, 0, 0, 0, -2, -2, 1, 99, 0, 0, 0, 0, 0, 0], 0.03185391963872694, 69.26666678873698), 69.01914893617021, 0.03185391963872694], [(67.86666678873698, [0, 0, 2, 99, 99, 1, 99, 1, 99, 1, 99, 0, 0, 0, 0, 0, 0], 0.030155149617589506, 67.86666678873698), 68.25744680851064, 0.030155149617589506], [(67.40000012207031, [0, -2, -1, 0, 1, 99, 1, 99, 1, 99, 1, 99, 0, 0, -2, 0, 0], 0.02837994582670972, 67.40000012207031), 67.05106383011189, 0.02837994582670972], [(65.53333335367839, [0, -2, 2, 99, 99, 2, 99, 99, -2, 1, 99, -1, 0, -2, 0, 0, 0], 0.026079801090976643, 65.53333335367839), 65.74680851096295, 0.026079801090976643], [(64.26666678873698, [0, -2, 2, 99, 99, -2, 0, 1, 99, 2, 99, 99, -2, 0, 1, 99, 0], 0.0245313118573717, 64.26666678873698), 64.57872340425531, 0.0245313118573717], [(62.76666678873698, [0, -2, 1, 99, 1, 99, 2, 99, 99, -2, 1, 99, 2, 99, 99, -2, 0], 0.0224569548939105, 62.76666678873698), 62.785106382978725, 0.0224569548939105], [(59.033333374023435, [0, -2, 2, 99, 99, 1, 99, 1, 99, 2, 99, 99, 2, 99, 99, 1, 99], 0.020128587134798665, 59.033333374023435), 58.902127660223776, 0.020128587134798665]])  # TODO
print(ouraccs, ourlats)
for i in range(len(ourlats)):
    ourlats[i] *= 1000.

c1=ax[1, 0].plot(ourlats, ouraccs, marker='o', markersize=4, c='r')
ax[1, 0].grid(True, alpha=0.5)


#resnet101 bs=1
ouraccs, ourlats = get_ours(jetson_res101_info)#[81.95531914114444, 81.41276596004406, 81.06808510898021, 80.08936170342628, 79.22553191554293, 78.12765957446808, 75.85531915153341, 75.50000000129862, 73.65106383108585] , [0.17033889558580192, 0.16174145419188224, 0.15310402109165386, 0.1437453886475226, 0.1265200942453712, 0.11071617916376902, 0.0967451273792922, 0.09170269002818096, 0.08476627234256628]


for i in range(len(ourlats)):
    ourlats[i] *= 1000.
c1=ax[2, 0].plot(ourlats, ouraccs, marker='o', markersize=4, c='r')
ax[2, 0].grid(True, alpha=0.5)

'''xiaomi'''
ouraccs, ourlats = get_ours(xiaomi_mbv2_info, False)#[(72.3999999593099, 14.92), [(71.80000016276041, [0, -2, 0, 0, 0, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0], 13.7, 71.80000016276041), 71.38297872275494, 13.7], [(71.83333319091797, [0, -2, 0, -2, 0, 0, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0], 13.39, 71.83333319091797), 71.00212766476895, 13.39], [(71.1666665242513, [0, -2, -1, 0, 1, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 12.360000000000001, 71.1666665242513), 70.41702127594644, 12.360000000000001], [(70.23333339436849, [0, -2, 1, 99, 0, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, 0, 0], 11.569999999999999, 70.23333339436849), 69.72127659249813, 11.569999999999999], [(69.49999995930989, [0, -2, 1, 99, 0, 0, 0, 0, 1, 99, 0, -2, 0, 0, 0, 0, 0], 11.1, 69.49999995930989), 69.44468085820624, 11.1], [(68.76666689046223, [0, -2, 1, 99, 1, 99, 0, 0, -1, 0, 1, 99, 0, 0, 0, 0, 0], 10.34, 68.76666689046223), 68.4702127627109, 10.34], [(67.76666668701172, [0, -2, 1, 99, 1, 99, 0, 1, 99, 2, 99, 99, 0, 0, 0, 0, 0], 9.68, 67.76666668701172), 67.60425531785032, 9.68], [(66.3000000813802, [0, -1, 1, 99, 2, 99, 99, 1, 99, -2, -2, -1, 0, 0, 0, 0, 0], 8.819999999999999, 66.3000000813802), 65.81276596004405, 8.819999999999999], [(64.93333341471354, [0, -1, 1, 99, 1, 99, 1, 99, 1, 99, 1, 99, 1, 99, 0, 0, 0], 8.18, 64.93333341471354), 64.86595744875645, 8.18], [(62.63333341471354, [0, -1, 2, 99, 99, 1, 99, 1, 99, 2, 99, 99, 1, 99, -2, -2, 0], 7.38, 62.63333341471354), 62.31063829787234, 7.38]])

c1=ax[0, 1].plot(ourlats, ouraccs, marker='o', markersize=4, c='r')
ax[0, 1].grid(True, alpha=0.5)


#resnet50 bs=1
ouraccs, ourlats = get_ours(xiaomi_res50_info)#[80.07659574208361, 79.58936170147835, 78.99787233588036, 77.79361702647108, 77.13829787428836, 76.62765957187085, 75.42553192203603, 73.70425532369411, 72.57659574208361, 71.12127660093917, 68.47021277050261] , [91.91999999999999, 87.03999999999999, 80.05, 76.73, 69.69, 64.7, 60.25, 57.95, 52.0, 48.82, 42.84]

c1=ax[1, 1].plot(ourlats, ouraccs, marker='o', markersize=4, c='r')
ax[1, 1].grid(True, alpha=0.5)


#resnet101 bs=1
ouraccs, ourlats =  get_ours(xiaomi_res101_info)#[81.96666670735677, 81.4361702153632, 81.04893617021277, 79.97446808575569, 79.73191489491565, 79.38936170342627, 78.91276595809612, 77.92978723469186, 77.58085106447909, 76.0085106395965, 75.44680851128761],[213.93, 200.42999999999998, 190.42, 174.62, 165.56, 158.8, 146.02999999999997, 135.51000000000002, 128.06, 113.18000000000002, 106.57000000000001]
ax[2, 1].plot(ourlats, ouraccs, marker='o', markersize=4, c='r')

ax[2, 1].grid(True, alpha=0.5)


'''3090'''
ouraccs, ourlats = get_ours(nvidia_3090_mbv2_info, False)#[(72.3999999593099, 0.01088502111661718), [(71.83333319091797, [0, -2, 0, -2, 0, 0, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0], 0.009440293150938795, 71.83333319091797), 71.00212766476895, 0.009440293150938795], [(71.66666672770182, [0, -2, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 0.00978286663193876, 71.66666672770182), 71.3255319200881, 0.00978286663193876], [(71.43333319091796, [0, -2, 0, -2, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 0.009242287266985496, 71.43333319091796), 70.89999999935068, 0.009242287266985496], [(70.90000026448568, [0, -2, 1, 99, 0, -1, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0], 0.0079789474998159, 70.90000026448568), 69.94680851388485, 0.0079789474998159], [(70.90000026448568, [0, -2, 1, 99, 0, -1, 0, 0, -2, 0, 0, 0, 0, 0, 0, 0, 0], 0.0079789474998159, 70.90000026448568), 69.94680851388485, 0.0079789474998159], [(69.60000002034505, [0, -2, -1, -2, 1, 99, 0, 1, 99, -2, 0, 0, 0, 0, 0, 0, 0], 0.007614397137275475, 69.60000002034505), 69.27021276595745, 0.007614397137275475], [(68.30000018310547, [0, -2, 2, 99, 99, -2, -2, 1, 99, 1, 99, 0, 0, 0, 0, 0, 0], 0.006970659215399558, 68.30000018310547), 68.52765957252015, 0.006970659215399558], [(67.33333345540365, [0, -1, -1, 1, 99, -1, 0, 1, 99, -2, 0, 1, 99, 0, 0, 0, 0], 0.006528713228705528, 67.33333345540365), 66.68723404125457, 0.006528713228705528], [(66.00000028483073, [0, -1, 1, 99, -1, 1, 99, -2, -1, 1, 99, 0, -1, 0, 0, 0, 0], 0.005958965036537828, 66.00000028483073), 66.62978723793842, 0.005958965036537828], [(64.36666678873698, [0, -1, 1, 99, 2, 99, 99, -2, 0, 2, 99, 99, 1, 99, 0, 0, 0], 0.005415939419379967, 64.36666678873698), 64.19574468669485, 0.005415939419379967]])

for i in range(len(ourlats)):
    ourlats[i] /= 0.032
ax[0, 2].plot(ourlats, ouraccs, marker='o', markersize=4, c='r')
ax[0, 2].grid(True, alpha=0.5)

# resnet50
ouraccs, ourlats = get_ours(nvidia_3090_res50_info)#[(80.03333357747395, 0.02365760361596252), [(79.09999993896484, [0, 0, 0, 0, 1, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 0.022429195005395385, 79.09999993896484), 79.17446808250914, 0.022429195005395385], [(79.43333321126302, [0, 1, 99, 0, 0, 1, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0], 0.020512275612249838, 79.43333321126302), 78.99148935715695, 0.020512275612249838], [(78.56666670735677, [1, 99, 1, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 0.019141950655043198, 78.56666670735677), 78.40638297417823, 0.019141950655043198], [(77.93333327229817, [1, 99, 1, 99, 0, 1, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0], 0.01791440709511538, 77.93333327229817), 77.87021276725606, 0.01791440709511538], [(77.30000014241537, [2, 99, 99, 1, 99, 1, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0], 0.0173386853090365, 77.30000014241537), 77.5765957414343, 0.0173386853090365], [(76.26666687011719, [0, 2, 99, 99, 0, 1, 99, 1, 99, 1, 99, 0, 0, 0, 0, 0], 0.01604756932980725, 76.26666687011719), 75.76382978658474, 0.01604756932980725], [(74.90000014241537, [1, 99, 1, 99, 1, 99, 2, 99, 99, 0, 0, 0, 0, 0, 0, 0], 0.015194695046607483, 74.90000014241537), 73.93829787948283, 0.015194695046607483], [(72.40000006103516, [2, 99, 99, 1, 99, 2, 99, 99, 0, 0, 1, 99, 0, 0, 1, 99], 0.013701116039099473, 72.40000006103516), 72.17234042293468, 0.013701116039099473], [(71.30000006103515, [1, 99, 2, 99, 99, 2, 99, 99, 1, 99, 0, 1, 99, 0, 0, 0], 0.012974105579533773, 71.30000006103515), 70.82340426051363, 0.012974105579533773], [(68.16666672770182, [2, 99, 99, 1, 99, 2, 99, 99, 0, 1, 99, 1, 99, 2, 99, 99], 0.011797388742802587, 68.16666672770182), 67.93191489361702, 0.011797388742802587]])  # TODO

for i in range(len(ourlats)):
    ourlats[i] /= 0.032

c1=ax[1, 2].plot(ourlats, ouraccs, marker='o', markersize=4, c='r')
ax[1, 2].grid(True, alpha=0.5)

# resnet 101
ouraccs, ourlats = get_ours(nvidia_3090_res101_info)#[81.95531914114444, 81.29574467565658, 80.8914893539104, 80.3702127685547, 79.81914894915641, 79.10425531135722, 79.02340424752742, 77.89574467305934, 76.37234042358398, 75.62978724053565, 74.00425532044756] , [0.04077928116981021, 0.03785974630277059, 0.035943912475070325, 0.033988489227390416, 0.0305093776001053, 0.029801400044981916, 0.028477365591648377, 0.025883904088274557, 0.024363410935384012, 0.02224808879131369, 0.02020963381169287]

for i in range(len(ourlats)):
    ourlats[i] /= 0.032
ax[2, 2].plot(ourlats, ouraccs, marker='o', markersize=4, c='r')

ax[2, 2].grid(True, alpha=0.5)
fontsize=25
labloc = -0.33

label_list = ['AdaptiveNet']

fig.legend([c1],
           labels= ['AdaptiveNet'],
           loc='upper center',
           borderaxespad=-0.4,ncol=4, frameon=False, prop={'family':'Times New Roman','size':fontsize})
# plt.legend()
for i in range(3):
    for j in range(3):
        ax[i, j].set_xlabel('Latency (ms)',fontdict={'family' : 'Times New Roman', 'size'   : fontsize})
        ax[i, j].set_ylabel('Top-1 accuracy (%)',fontdict={'family' : 'Times New Roman', 'size'   : fontsize})

ax[0, 0].set_title("(a) MobileNetV2 on Jetson Nano", y=labloc,fontdict={'family' : 'Times New Roman', 'size'   : fontsize})
ax[0, 1].set_title("(b) MobileNetV2 on smart phone", y=labloc,fontdict={'family' : 'Times New Roman', 'size'   : fontsize})
ax[1, 0].set_title("(d) ResNet50 on Jetson Nano", y=labloc,fontdict={'family' : 'Times New Roman', 'size'   : fontsize})
ax[1, 1].set_title("(e) ResNet50 on smart phone", y=labloc,fontdict={'family' : 'Times New Roman', 'size'   : fontsize})
ax[2, 0].set_title("(g) ResNet101 on Jetson Nano", y=labloc,fontdict={'family' : 'Times New Roman', 'size'   : fontsize})
ax[2, 1].set_title("(h) ResNet101 on smart phone", y=labloc,fontdict={'family' : 'Times New Roman', 'size'   : fontsize})
ax[0, 2].set_title("(c) MobileNetV2 on 3090Ti GPU", y=labloc,fontdict={'family' : 'Times New Roman', 'size'   : fontsize})
ax[1, 2].set_title("(f) ResNet50 on 3090Ti GPU", y=labloc,fontdict={'family' : 'Times New Roman', 'size'   : fontsize})
ax[2, 2].set_title("(i) ResNet101 on 3090Ti GPU", y=labloc,fontdict={'family' : 'Times New Roman', 'size'   : fontsize})

fig.tight_layout()
# plt.subplots_adjust(left=None, bottom=None, right=None, top=None, wspace=None, hspace=0.5)

plt.savefig("tradeoff.pdf")  # savefig一定要在show之前
plt.show()
print(np.mean(ratios))